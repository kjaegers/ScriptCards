--/|ScriptCards Library: systemneutrallib (snlib) version 0.1.3 --/|Provides various utility procedures for general Roll20 stuff --/|This library consolidates functions from a number of the sample scripts on the ScriptCards github into a single library --/|that isn't tied to a particular game system. To use this library, paste the contents of this script into a handout with --/|the name "ScriptCards Library snlib" and then use the sequence +++snlib+++ in your script to allow access to the library --/|functions within your script. Refer to the ScriptCards wiki for additional information on libraries and their use. --/|Functions Included: --/| ################################################################################################### --/| Library related functions --/| ################################################################################################### --/|   LibSN_CHECK_FOR_LIBRARY|ReturnString --/|      Sets the ReturnString value to 1. Can be used to check to ensure the library is loaded --/| --/| ################################################################################################### --/| Functions related to the BUMP Api/Mod Script --/| ################################################################################################### --/|  LibSN_FIND_BUMP_MASTER_TOKEN|TokenID of Shadow Token;Return var name for Master Token ID (string) --/|          Pass a Token ID for the "shadow" bump token and a string variable name for the --/|          return value. The function will return the token id of the real token it is --/|          standing in for. If the passed token ID is already the real token, the same ID will --/|          be returned. If the token ID isn't registered with bump, the return value will --/|          be empty. --/| --/|  LibSN_FIND_BUMP_SHADOW_TOKEN|TokenID of Master Token;Return var name for Shadow Token ID (string) --/|          Pass a Token ID for the real token and a string variable name for the --/|          return value. The function will return the token id of the shadow token it is --/|          associated with. If the passed token ID is already the shadow token, the same ID will --/|          be returned. If the token ID isn't registered with bump, the return value will --/|          be empty. --/| --/|  LibSN_FIND_BUMP_TOKEN_PAIR|TokenID of Shadow or Master Token;Master Token Var Name;Shadow Token Var Name --/|          Takes a token ID as parameter 1 and two string variable names as parameters 2 and 3. --/|          Acts as a combination of the two previous functions, returning the real token (param 2) --/|          and the shadow token (param 3) given either of the tokens as the first parameter --/| --/| ################################################################################################### --/| Functions related controlled and/or selected tokens --/| ################################################################################################### --/|  LibSN_CHECK_FOR_SELECTED_TOKENS|Result Var Name (string) --/|          Returns a "1" if there is a selected token passed to the script, otherwise returns "0" --/| --/|  LibSN_GET_CONTROLLED_CHARACTER_LIST|Result Var Name (string) --/|          Returns a comma seprated list of all of the characters controlled by the player that --/|          executed the script. (ie, ControlledBy contains their player ID) --/| --/|  LibSN_GET_TOKENS_REPRESENTING|CharacterID;PageID;ReturnTokenIDVariable (string) --/|          Returns a comma separated list of tokens on the PageID page that represent the character --/|          specified by CharacterID --/| --/|  LibSN_GET_CONTROLLED_TOKENS_FROM_PAGETOKENS|Return Var Name (string) --/|          Returns a comma separated list of all of the tokens on the current player (ribbon) page --/|          that are controlled by the player executing the script. --/| --/|  LibSN_GET_PLAYER_CONTROLLED_TOKENS_FROM_PAGETOKENS| --/|          Returns a comma separated list of all of the tokens on the current player (ribbon) page --/|          that are controlled by a player --/| --/| ################################################################################################### --/| Functions related to the Token Status Markers --/| ################################################################################################### --/|  LibSN_CHECK_STATUS_MARKER|TokenID;MarkerToFind;ExistsVariable (string);CountVariable (string) --/|          Will check the given token (TokenID) for the status marker (MarkerToFind) and set two return --/|          string variables: (ExistsVariable) will be 1 if the token has the marker, and (CountVariable) --/|          will contain the counter number on the marker (default 0 for no number) --/| --/|  LibSN_REMOVE_STATUS_MARKER|TokenID;MarkerToRemove --/|          Will remove any variation of (MarkerToRemove from the given token (TokenID) --/| --/|  LibSN_REMOVE_STATUS_MARKER_SET|Token_ID;Status Marker1;Status Marker 2;... --/|          Removes all of the status markers in the list from the indicated token. --/| --/|  LibSN_ADD_STATUS_MARKER_SET|Token_ID;Status Marker1;Status Marker 2;... --/|          Adds all of the status markers in the list to the indicated token. --/| --/|  LibSN_ADD_STATUS_MARKER|TokenID;MarkerToAdd;Count --/|          Will add (MarkerToAdd) to the given token (TokenID). If count is specified with a number --/|          betweeen 1 and 9, the number will be placed on top of the status marker. --/| --/|  LibSN_DECREMENT_STATUS_MARKER|TokenID;MarkerToDecrement;Blank, 0 or 1 (OPTIONAL) --/|          If (MarkerToDecrement) exists on the on token (TokenID), the counter number will be --/|          decreased by 1. If a third parameter is added and set to 1, the status marker will --/|          be removed when decrementing from 1 to no counter. If set to 0, the marker will be --/|          be removed when decrementing for a marker without a counter. If not specified, the --/|          marker will not be removed when the counter would go below 1 or 0. --/| --/|  LibSN_INCREMENT_STATUS_MARKER|TokenID;MarkerToIncrement;Blank, 0 or 1 (OPTIONAL) --/|          If (MarkerToDecrement) exists on the on token (TokenID), the counter number will be --/|          increased by 1. If a third parameter is added and set to 0 or 1, the status marker will --/|          be added to the token if it does not exist. If the parameter is 0, no counter number --/|          will be added to the token. If the value is 1, the counter number will be set to 1 --/| --/|  LibSN_CLEAR_STATUS_MARKERS|TokenID --/|          Removes all status markers from the indicated token. --/| ################################################################################################### --/| Functions related to the Roll20 Turn Order/Initiative Tracker --/| ################################################################################################### --/|  NOTE: see the list below for the parameters for these functions. They all take the same parameter set --/| --/|  LibSN_GET_CURRENT_TURN_INFO   - Returns information for the current entry in the turn tracker --/|  LibSN_GET_NEXT_TURN_INFO      - Returns information for the next upcoming entry in the turn tracker --/|  LibSN_GET_LAST_TURN_INFO      - Returns information for the final entry in the turn tracker --/| --/|          All of these functions accept 6 parameters, which are all the names of string variables that will be --/|          set after the analysis of the information for the given turn. The parameters are : --/|            Param 1 : Variable to set to the Token ID for the token representing the turn (if any) --/|            Param 2 : Variable to set to the initiative value for the turn (ie, the Initiative number) --/|            Param 3 : Variable to set to the Custom text for a turn that doesn't represent a token --/|            Param 4 : Variable to set to the per-round formula setting for the custom turn --/|            Param 5 : Variable to set to the Page ID where the turn resides --/|            Param 6 : Variable to set to the display name, which is the token name for turns that represent --/|                      tokens, and the Custom text for custom (non-token) turn entries --/| --/|  LibSN_GET_NUMBERED_TURN_INFO --/|          This function is identical to the three above, except it adds an additional parameter the is the --/|          number of the turn to examine (in sequence) from the top of the turn tracker list (starting at 1) --/|          (ie, GET_NUMBERED_TURN_INFO|TID;INIT;CUSTOM;FORMULA;PAGE;NAME;TURNNUMBER)| --/| --/|  LibSN_GET_TOKEN_TURN_INFO|TokenID, InitCounter, CustomName, Formula, page --/|          Returns the InitCounter,CustomName, Formula, and PageID for the token matching (TokenID). If there --/|          is no matching turn order entry, empty strings will be returned. --/| --/|  LibSN_GET_TURNORDER_LENGTH|Return Var (Roll) --/|          This function returns the number of turns in the turn tracker --/| --/|  LibSN_REFRESH_TURNORDER_CACHE| --/|          The turnorder functions check when called to see if the turn order has been parsed. If you modify the --/|          turn order in your script, you should call REFRESH_TURNORDER_CACHE to make sure the turnorder functions --/|          are working with the updated information.  --/| ################################################################################################### --/| Functions related to the working with Arrays --/| ################################################################################################### --/|  LibSN_RANDOMIZE_ARRAY|ArrayToRandomize;Iterations (optional, default 3 * number of items) --/|          Updates the array (ArrayToRandomize) by randomly swapping items in the array (Iterations) --/|          times. If not specified, iterations will be three times the number of array elements. --/| --/|  LibSN_COPY_ARRAY|SOURCE;DEST;START (OPTIONAL);END (OPTIONAL) --/|          Copy (or partially copy) an array to a new array. (SOURCE) and (DEST) are arrays (DEST will --/|          be created or replaced). If specified, the START and END indexes will be used for the copy. --/|          These indexes are 0-based. --/| --/|  LibSN_SWAP_ARRAY_ITEMS|Array;Item1_Index;Item2_Index --/|          Swap the items ast (Item1_Index) and (Item2_Index) in array (Array) --/| --/|  LibSN_RANDOM_ARRAY_FROM_ARRAY|Source;Dest;Quantity;Unique(0 or 1) --/|          Returns a new array (Dest) containing (Quantity) random items from the (Source) array. If --/|          (Unique) is 1, repeat items will not be generated. If uniquie items are requested, the --/|          maximum number of items returned will be the maximum number in Source if (Quantity) is --/|          larger than that. (Ex, an array with 3 items will only ever return 3 unique items) --/| --/| --/| ################################################################################################### --/| General/Uncategorized functions --/| ################################################################################################### --/|  LibSN_BUILD_QUERY_FROM_REPSECTION|charid;sectionname;displayfield;valuefield;prompt;returnstring --/|        Returns (returnstring) a string variable by iterating through a (sectionname) repeating section on --/|        the character sheet (charid). The (displayfield) will be used as the text of the dropdown entry, --/|        and the (valuefield) will be used as the hiden value of the dropdown entry. The (prompt) will be the --/|        text of the query prompt. --/| --/| --/| ################################################################################################### --/| General/Uncategorized functions --/| ################################################################################################### --/| --/|  LibSN_APPLY_DAMAGE_OR_HEALING_TO_SELECTED|bar#;amount;display (0 or 1);Allow Overhealing (0 or 1); Allow negative hp (0 or 1) --/|          Applies (amount) damage [negative number] or healing [positie number] to all selected tokens (bar#) token bar. --/|          If (display) is specified as 1, an output line will be genereated for each token damaged/healed. --/| --/|  LibSN_APPLY_DAMAGE_OR_HEALING|tokenid;bar#;amount;display (0 or 1);Allow Overhealing (0 or 1); Allow negative hp (0 or 1) --/|          Applies damage (negative number) or healing (positie number) to (tokenid)'s (bar#) token bar. --/| --/|  LibSN_APPLY_DAMAGE_OR_HEALING_TO_ARRAY|ArrayName;bar#;amount;display (0 or 1);Allow Overhealing (0 or 1); Allow negative hp (0 or 1) --/|          Applies (amount) damage [negative number] or healing [positie number] to all tokens (bar#) token bar with ids --/|          contained as elements in (ArrayName) --/|          If (display) is specified as 1, an output line will be genereated for each token damaged/healed. --/| --/|  LibSN_BUILD_DROPDOWN_FROM_ARRAY|ReturnVar (string);Prompt;arrayName  --/|          Fills (ReturnVar) with a Roll20 query prompt string created by supplying the value of (Prompt) and the --/|          content of the array (arrayName) that can then be used in a i command or rbutton --/| --/|  LibSN_CHECK_TOKEN_OVERLAP|Token1ID;Token2ID;ReturnStringVar --/|          Returns a 1 if the two passed token graphics overlap using a bounding-box check (squares/rectangles). Otherwise 0 --/|          NOTE: Tokens next to each other (sharing a side or corner) will not return a 1 --/| --/|  LibSN_CHECK_TOKEN_OVERLAP_CIRCLE|Token1ID;Token2ID;ReturnStringVar --/|          Returns a 1 if the two passed token graphics overlap using a center/radius (circular) check. Otherwise 0 --/| --/|  LibSN_GET_TOKEN_COORDS|TokenID;LeftX;LeftY;RightX;RightY;shrink by pixels --/|          Returns the actual left, top, right, and bottom locations of a token. optionally, a padding of (shrink by pixels) can be --/|          specified (adds the value to hte left/top and subtracts it form right/bottom) --/| --/|  LibSN_REPEATING_RBUTTONS|charid;sectionname;displayfield;filterfield;filtersearch;reentrypoint;reentryfield;returnstring --/|          Returns (returnstring) as a string of rbuttons generated by taking the passed (charid) and scanning all of the entries in --/|          the (sectionname) repeating section. The (displayfield) in the repeating section will appear on the button as the button --/|          text. Rows will be searched to see if (filterfield) contains (filtertext). If you do not wish to filter, simply leave these --/|          blank by leaving nothing between the semicolons. The button will use (reentrypoint) as the label for reentry and pass --/|          a parameter of (reentryfield) as &reentryval. The (returnstring) string will contain the output to create the button list. --/| --/|  LibSN_REPEATING_RBUTTONS_AS_ARRAY|charid;sectionname;displayfield;filterfield;filtersearch;reentrypoint;reentryfield;returnarray --/|          Returns (returnarray) as an array of rbottons generated by taking the passed (charid) and scanning all of the entries in --/|          the (sectionname) repeating section. The (displayfield) in the repeating section will appear on the button as the button --/|          text. Rows will be searched to see if (filterfield) contains (filtertext). If you do not wish to filter, simply leave these --/|          blank by leaving nothing between the semicolons. The button will use (reentrypoint) as the label for reentry and pass --/|          a parameter of (reentryfield) as &reentryval. The (returnstring) string will contain the output to create the button list. --/| --/|  LibSN_REPEATING_SHEETBUTTONS|sheetid;charid;sectionname;displayfield;filterfield;filtersearch;abilitiyfield;returnstring --/|          Returns (returnstring) as a string of bottons generated by taking the passed (charid) and scanning all of the entries in --/|          the (sectionname) repeating section. The (displayfield) in the repeating section will appear on the button as the button --/|          text. Rows will be searched to see if (filterfield) contains (filtertext). If you do not wish to filter, simply leave these --/|          blank by leaving nothing between the semicolons. The button will use (sheetid) as character on which the abilities are found --/|          and abilityfield as the field to use for the ability name. --/| --/|  LibSN_REPEATING_SHEETBUTTONS_AS_ARRAY|sheetid;charid;sectionname;displayfield;filterfield;filtersearch;abilitiyfield;returnarray --/|          Returns (returnarray) as an array of bottons generated by taking the passed (charid) and scanning all of the entries in --/|          the (sectionname) repeating section. The (displayfield) in the repeating section will appear on the button as the button --/|          text. Rows will be searched to see if (filterfield) contains (filtertext). If you do not wish to filter, simply leave these --/|          blank by leaving nothing between the semicolons. The button will use (sheetid) as character on which the abilities are found --/|          and abilityfield as the field to use for the ability name. --/| --/|  LibSN_Move_Token|TokenID;X;Y --/|        Moves the token (TokenID) to the X,Y coordinates specified by (X) and (Y). X and Y can also be relative --/|        by prefixing them with + or - (ie, +10 for X moves the token 10 units to the right) --:LibSN_CHECK_FOR_LIBRARY|ReturnString --&[%1%]|1 --<| --:LibSN_LIBRARY_INITIALIZATION| --:snlib_LIBRARY_INITIALIZATION| --\|System Neutral Library Library Loaded --<| --:LibSN_FIND_BUMP_MASTER_TOKEN|TokenID of Slave Token;Return var   --~work|string;replaceall;",";"&&&";[*G:Bump:mirrored]   --~work|string;stripchars;{}";[&work]   --~|array;fromstring;workarray;&&&;[&work]   --&searchVal|[%1%]   --&[%2%]|   --%_libloop|foreach;workarray     --?"[&_libloop]" -ninc "[&searchVal]"|%     --~[%2%]|string;before;:;[&_libloop]   --%| --<| --:LibSN_FIND_BUMP_SHADOW_TOKEN|TokenID of Slave Token;Return var   --~work|string;replaceall;",";"&&&";[*G:Bump:mirrored]   --~work|string;stripchars;{}";[&work]   --~|array;fromstring;workarray;&&&;[&work]   --&searchVal|[%1%]   --&[%2%]|   --%_libloop|foreach;workarray     --?"[&_libloop]" -ninc "[&searchVal]"|%     --~[%2%]|string;after;:;[&_libloop]   --%| --<| --:LibSN_FIND_BUMP_TOKEN_PAIR|TokenID of Slave Token;Maste Token Var;Shadow Token Var   --~work|string;replaceall;",";"&&&";[*G:Bump:mirrored]   --~work|string;stripchars;{}";[&work]   --~|array;fromstring;workarray;&&&;[&work]   --&searchVal|[%1%]   --&[%2%]|   --%_libloop|foreach;workarray     --?"[&_libloop]" -ninc "[&searchVal]"|%     --~[%2%]|string;before;:;[&_libloop]     --~[%3%]|string;after;:;[&_libloop]   --%| --<| --/|Returns 0 if there were no tokens passed to the script as selected, otherwise returns 1 --:LibSN_CHECK_FOR_SELECTED_TOKENS|Variable to set to 0 or 1   --?"X[@SC_SelectedTokens()]" -eq "X"|&[%1%];0|&[%1%];1 --<|| --:LibSN_GET_CONTROLLED_CHARACTER_LIST|--/|SendingPlayerID   --~|array;objects:character;_FCT_Characters   --&[%1%]|   --%_libloop|0;[@_FCT_Characters(maxindex)]     --?"X[*[@_FCT_Characters([&_libloop])]:controlledby]" -ninc [&SendingPlayerID]|%     --?"X[&[%1%]]" -eq "X"|&[%1%];+[@_FCT_Characters([&_libloop])]|&[%1%];+,[@_FCT_Characters([&_libloop])]   --%| --<| --:LibSN_GET_TOKENS_REPRESENTING|CharacterID;PageID;ReturnTokenIDVariable   --&[%3%]|   --?"X[%1%]" -eq "X"|<   --~|array;pagetokens;_FCT_Tokens;[%2%];pc   --%_libloop|0;[@_FCT_Tokens(maxindex)]     --?"X[*[@_FCT_Tokens([&_libloop])]:t-represents]" -ninc [%1%]|%     --?"X[&[%3%]]" -eq "X"|&[%3%];+[@_FCT_Tokens([&_libloop])]|&[%3%];+,[@_FCT_Tokens([&_libloop])]   --%| --<| --:LibSN_GET_CONTROLLED_TOKENS_FROM_PAGETOKENS|   --~|array;pagetokens;_FCT_Tokens;[*C:playerpageid];pc   --%_libloop|0;[@_FCT_Tokens(maxindex)]     --&_FCT_TID|[@_FCT_Tokens([&_libloop])]     --&_FCT_CHAR|[*[&_FCT_TID]:t-represents]     --?"X[*O:[&_FCT_CHAR]:character:controlledby]" -ninc [&SendingPlayerID]|%     --?"X[&[%1%]]" -eq "X"|&[%1%];+[&_FCT_TID]|&[%1%];+,[&_FCT_TID]   --%| --<| --:LibSN_GET_PLAYER_CONTROLLED_TOKENS_FROM_PAGETOKENS|   --~|array;pagetokens;_FCT_Tokens;[*C:playerpageid];pc   --%_libloop|0;[@_FCT_Tokens(maxindex)]     --&_FCT_TID|[@_FCT_Tokens([&_libloop])]     --&_FCT_CHAR|[*[&_FCT_TID]:t-represents]     --?"X[*O:[&_FCT_CHAR]:character:controlledby]" -eq "X"|%     --?"X[&[%1%]]" -eq "X"|&[%1%];+[&_FCT_TID]|&[%1%];+,[&_FCT_TID]   --%| --<| --:LibSN_ADD_STATUS_MARKER|Token_ID;Status Marker;Count   -->LibSN_REMOVE_STATUS_MARKER|[%1%];[%2%]   --~|array;statusmarkers;Conditions;[%1%]   --&toAdd|[%2%]   --?"[%2%]" -ne "dead" -and "X[%3%]" -ne "X" -and "X[%3%]" -ne "X0"|=countToAdd;[%3%] {MIN:0} {MAX:9}   --?"[%2%]" -ne "dead" -and "X[%3%]" -ne "X" -and "X[%3%]" -ne "X0"|&toAdd;[%2%]@[$countToAdd.Raw]   --~|array;add;Conditions;[&toAdd]   --~newConditions|array;stringify;Conditions   --#parameterdelimiter|$   --~newConditions|string$replaceall$;$,$[&newConditions]   --#parameterdelimiter|;   --?"[&newConditions(0,1)]" -eq ","|&newConditions;[&newConditions(1)]   --!t:[%1%]|statusmarkers:[&newConditions] --<| --:LibSN_REMOVE_STATUS_MARKER|Token_ID;Status Marker   -->LibSN_CHECK_STATUS_MARKER|[%1%];[%2%];MarkerExists;MarkerCounter    --?[&MarkerExists] -eq 0|<   --~|array;statusmarkers;Conditions;[%1%]   --?[&MarkerCounter] -eq 0|&toCheckFor;[%2%]|&toCheckFor;[%2%]@[&MarkerCounter]   --~hasCondition|array;indexof;Conditions;[&toCheckFor]   --?[&hasCondition] -eq "ArrayError"|<   --~|array;remove;Conditions;[&toCheckFor]   --~newConditions|array;stringify;Conditions   --#parameterdelimiter|$   --~newConditions|string$replaceall$;$,$[&newConditions]   --#parameterdelimiter|;   --!t:[%1%]|statusmarkers:[&newConditions] --<|  --:LibSN_REMOVE_STATUS_MARKER_SET|Token_ID;Status Marker1;Status Marker 2;...   --%_libmarkerloop|1;[@args(maxindex)]     -->LibSN_REMOVE_STATUS_MARKER|[%1%];[@args([&_libmarkerloop])]   --%| --<| --:LibSN_ADD_STATUS_MARKER_SET|Token_ID;Status Marker1;Status Marker 2;...   --%_libmarkerloop|1;[@args(maxindex)]     -->LibSN_ADD_STATUS_MARKER|[%1%];[@args([&_libmarkerloop])]   --%| --<| --:LibSN_DECREMENT_STATUS_MARKER|Token_ID;Status Marker;Optional:0=remove marker if decrementing from 0 or 1=Remove marker if decrementing TO 0.   -->LibSN_CHECK_STATUS_MARKER|[%1%];[%2%];_DEC_EXIST;_DEC_COUNT   --?[&_DEC_EXIST] -eq 0|<   --?[&_DEC_COUNT] -eq 0 -and "X[%3%]" -eq "X"|<   -->LibSN_REMOVE_STATUS_MARKER|[%1%];[%2%]   --?[&_DEC_COUNT] -eq 1 -and "X[%3%]" -eq "X1"|<   --?[&_DEC_COUNT] -eq 0 -and "X[%3%]" -eq "X0"|<   --?[&_DEC_COUNT] -gt 1|>LibSN_ADD_STATUS_MARKER;[%1%];[%2%];[=[&_DEC_COUNT]-1]   --?[&_DEC_COUNT] -eq 1|>LibSN_ADD_STATUS_MARKER;[%1%];[%2%] --<| --:LibSN_INCREMENT_STATUS_MARKER|Token_ID;Status Marker;Optional:0=remove marker if decrementing from 0 or 1=Remove marker if decrementing TO 0. -->LibSN_CHECK_STATUS_MARKER|[%1%];[%2%];_INC_EXIST;_INC_COUNT --?[&_INC_EXIST] -eq 0 -and "X[%3%]" -eq "X"|< -->LibSN_REMOVE_STATUS_MARKER|[%1%];[%2%] --?[&_INC_COUNT] -lt 9|>LibSN_ADD_STATUS_MARKER;[%1%];[%2%];[=[&_INC_COUNT]+1] --?[&_INC_COUNT] -eq 9|>LibSN_ADD_STATUS_MARKER;[%1%];[%2%];9 --<|   --:LibSN_CHECK_STATUS_MARKER|TokenID;MarkerToFind;Exists;Counter   --~|array;statusmarkers;Conditions;[%1%]   --&FoundMarker|-1   --%_libloop|0;[@Conditions(maxindex)]     --&Temp|[@Conditions([&_libloop])] 	--?[&Temp(indexof,[%2%])] -eq 0|&FoundMarker;[&_libloop]   --%|   --?[&FoundMarker] -ne -1|LibSN_FOUND_STATUS_MARKER   --&[%3%]|0 --&[%4%]|0 --<| --:LibSN_FOUND_STATUS_MARKER|   --&[%3%]|1   --&[%4%]|0   --&ThisMarker|[@Conditions([&FoundMarker])]   --?[&ThisMarker(contains,@)] -eq 0|<   --~[%4%]|string;after;@;[@Conditions([&FoundMarker])] --<| --:LibSN_CLEAR_STATUS_MARKERS|TokenID   --!t:[%1%]|statusmarkers:| --<| --:LibSN_GET_CURRENT_TURN_INFO|TokenID;InitCounter;CustomName;Formula;page;name   --?"X[$_toCount.Raw]" -eq "X"|>LibSN__to_PARSE_TURN_ORDER   --?[$_toCount] -eq 0|LibSN__to_CLEAR_AND_RETURN   -->LibSN__to_GET_TURN_INFO|[%1%];[%2%];[%3%];[%4%];[%5%];[%6%];"[&_to1(replaceall,;,!!!)]" --<| --:LibSN_GET_NEXT_TURN_INFO|TokenID;InitCounter;CustomName;Formula;page;name   --?"X[$_toCount.Raw]" -eq "X"|>LibSN__to_PARSE_TURN_ORDER   --?[$_toCount] -lt 2|LibSN__to_CLEAR_AND_RETURN   -->LibSN__to_GET_TURN_INFO|[%1%];[%2%];[%3%];[%4%];[%5%];[%6%];[&_to2(replaceall,;,!!!)] --<| --:LibSN_GET_LAST_TURN_INFO|TokenID;InitCounter;CustomName;Formula;page;name   --?"X[$_toCount.Raw]" -eq "X"|>LibSN__to_PARSE_TURN_ORDER   --?[$_toCount] -lt 1|LibSN__to_CLEAR_AND_RETURN   -->LibSN__to_GET_TURN_INFO|[%1%];[%2%];[%3%];[%4%];[%5%];[%6%];[&_to[$_toCount.Raw](replaceall,;,!!!)] --<| --:LibSN_GET_NUMBERED_TURN_INFO|TokenID;InitCounter;CustomName;Formula;page;name;turnnumber   --?"X[$_toCount.Raw]" -eq "X"|>LibSN__to_PARSE_TURN_ORDER   --?[$_toCount] -lt [%7%]|LibSN__to_CLEAR_AND_RETURN   -->LibSN__to_GET_TURN_INFO|[%1%];[%2%];[%3%];[%4%];[%5%];[%6%];[&_to[%7%](replaceall,;,!!!)] --<| --:LibSN_GET_TOKEN_TURN_INFO|TokenID;InitCounter;CustomName;Formula;page   --?"X[$_toCount.Raw]" -eq "X"|>LibSN__to_PARSE_TURN_ORDER   --&_toID| --&_toPR| --&_toCustom| --&_toFormula| --&_toPageID|   --%_to_outer_libloop|1;[$_toCount]     --&_work_turn|[&_to[&_to_outer_libloop]]     --&_work_turn|[&_work_turn(replaceall,{,)] --&_work_turn|[&_work_turn(replaceall,},)]         --~_to_ThisTurn|string;split;,;[&_work_turn]     --%_toLoop|1;[$_to_ThisTurnCount]       --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "id"|&_toID;[&_to_ThisTurn[&_toLoop](replace,id:,)]       --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "pr"|&_toPR;[&_to_ThisTurn[&_toLoop](replace,pr:,)]       --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "cu"|&_toCustom;[&_to_ThisTurn[&_toLoop](replace,custom:,)]       --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "fo"|&_toFormula;[&_to_ThisTurn[&_toLoop](replace,formula:,)]       --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "_p"|&_toPageID;[&_to_ThisTurn[&_toLoop](replace,_pageid:,)]     --%|     --?"[&_toID]" -eq "[%1%]"|&[%2%];[&_toPR]     --?"[&_toID]" -eq "[%1%]"|&[%3%];[&_toCustom]     --?"[&_toID]" -eq "[%1%]"|&[%4%];[&_toFormula]     --?"[&_toID]" -eq "[%1%]"|&[%5%];[&_toPageID]   --%| --<| --:LibSN_GET_TURNORDER_LENGTH|ReturnValue   --?"X[$_toCount.Raw]" -eq "X"|>LibSN__to_PARSE_TURN_ORDER   --?"X[&_to1]" -eq "X"|=[%1%];0|=[%1%];[$_toCount] --<| --:LibSN_REFRESH_TURNORDER_CACHE|   -->LibSN__to_PARSE_TURN_ORDER| --<| --:LibSN__to_PARSE_TURN_ORDER|   --&_to_temp|[*C:turnorder]   --&_to_temp|[&_to_temp(replaceall,",)]   --&_to_temp|[&_to_temp(replaceall,;,!!!)]   --&_to_temp|[&_to_temp(1)]   --&_to_temp|[&_to_temp(0,[=[&_to_temp(length)]-1])]   --?"X[&_to_temp]X" -eq "X[]X"|LibSN__to_CLEAR_AND_RETURN   --~_to|string;split;},{;[&_to_temp] --<| --:LibSN__to_CLEAR_AND_RETURN|   --&[%1%]| --&[%2%]| --&[%3%]| --&[%4%]| --&[%5%]| --&[%6%]| --<| --:LibSN__to_GET_TURN_INFO|   --&_work_turn|[%7%]   --&_work_turn|[&_work_turn(replaceall,!!!,;)]   --&_work_turn|[&_work_turn(replaceall,{,)] --&_work_turn|[&_work_turn(replaceall,},)]   --~_to_ThisTurn|string;split;,;[&_work_turn]   --%_toLoop|1;[$_to_ThisTurnCount]     --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "id"|&[%1%];[&_to_ThisTurn[&_toLoop](replace,id:,)]     --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "pr"|&[%2%];[&_to_ThisTurn[&_toLoop](replace,pr:,)]     --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "cu"|&[%3%];[&_to_ThisTurn[&_toLoop](replace,custom:,)]     --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "fo"|&[%4%];[&_to_ThisTurn[&_toLoop](replace,formula:,)]     --?"[&_to_ThisTurn[&_toLoop](0,2)]" -eq "_p"|&[%5%];[&_to_ThisTurn[&_toLoop](replace,_pageid:,)]   --%|   --?[&[%1%]] -ne -1|&[%6%];[*[&[%1%]]:t-name]|&[%6%];[&[%3%]] --<| --:LibSN_APPLY_DAMAGE_OR_HEALING_TO_SELECTED|bar#;amount;display (0 or 1);allow overheal (0 or 1);allow negative hp (0 or 1)   -->LibSN_APPLY_DAMAGE_OR_HEALING_TO_ARRAY|SC_SelectedTokens;[%1%];[%2%];[%3%];[%4%];[%5%];[%6%] --<| --:LibSN_APPLY_DAMAGE_OR_HEALING|tokenid;bar#;amount;display (0 or 1);allow overheal (0 or 1);allow negative hp (0 or 1)   --=_applyValue|[%3%]   --=_newValue|[*[%1%]:t-bar[%2%]_value] + [$_applyValue]   --?[$_newValue] -lt 0 -and "X[%6%]" -ne "X1"|=_newValue;0   --?"X[%5%]" -ne "X1" -and [$_newValue] -gt [*[%1%]:t-bar[%2%]_max]|=_newValue;[*[%1%]:t-bar[%2%]_max]   --?"X[%4%]" -eq "X1"|+Applying;[%3%] HP to [*[%1%]:t-name]   --!t:[%1%]|bar[%2%]_value:[$_newValue.Raw] --<| --:LibSN_APPLY_DAMAGE_OR_HEALING_TO_ARRAY|ArrayName;bar#;amount;display (0 or 1);allow overheal (0 or 1);allow negative hp (0 or 1)   --%_thisToken|foreach;[%1%]     -->LibSN_APPLY_DAMAGE_OR_HEALING|[&_thisToken];[%2%];[%3%];[%4%];[%5%];[%6%]   --%| --<| --:LibSN_DISPLAY_LIBRARY_INFO|   --+Library Loaded|systemneutral --<| --:LibSN_BUILD_DROPDOWN_FROM_ARRAY|ReturnVar;Prompt;arrayName --&_DDOWN|? --&_DDOWN|+{ --&_DDOWN|+[%2%] --%_libloop|foreach;[%3%]   --&_DDOWN|+|[&_libloop] --%| --&_DDOWN|+} --&[%1%]|[&_DDOWN] --<| --:LibSN_RANDOMIZE_ARRAY|ArrayToRandomize;Iterations (optional, default 3 * number of items) --=_ITERATIONS|[@[%1%](maxindex)] * 3 --?"[%2%]" -ne ""|=_ITERATIONS;[%2%] --%_libloop|0;[$_ITERATIONS]   -->LibSN_SWAP_ARRAY_ITEMS|[%1%];[=1d[@[%1%](length)] - 1];[=1d[@[%1%](length)] - 1] --%| --<| --:LibSN_COPY_ARRAY|SOURCE;DEST;START (OPTIONAL);END (OPTIONAL) --&_STARTCOUNT|[%3%] --&_ENDCOUNT|[%4%] --?"[&_STARTCOUNT]" -eq ""|&_STARTCOUNT;0 --?"[&_ENDCOUNT]" -eq ""|&_ENDCOUNT;[@[%1%](maxindex)] --~dummy|array;[%2%];define --=_DESTITEM|0 --%_libloop|[&_STARTCOUNT];[&_ENDCOUNT]   --&[%2%]([$_DESTITEM.Raw])|[@[%1%]([&_libloop])]   --=_DESTITEM|[$_DESTITEM] + 1 --%| --<| --:LibSN_SWAP_ARRAY_ITEMS|Array;Item1_Index;Item2_Index --?"X[%2%]" -eq "X" -or "X[%3%]" -eq "X" -or "[%2%]" -eq "[%3%]"|< --&_DUMMY|[@[%1%]([%3%])] --&[%1%]([%3%])|[@[%1%]([%2%])] --&[%1%]([%2%])|[&_DUMMY] --<| --:LibSN_RANDOM_ARRAY_FROM_ARRAY|Source;Dest;Quantity;Unique(0 or 1); --&_MAXROLL|[@[%1%](length)] --?"[%4%]" -eq "1"|=_PICKROLL;[%3%]u[&_MAXROLL]|=_PICKROLL;[%3%]d[&_MAXROLL] --~dummy|array;define;[%2%]; --~dummy|array;removeat;[%2%];0 --%_libloop|1;[$_PICKROLL.RollCount]   --=_THISROLL|[$_PICKROLL.RolledDice([&_libloop])] - 1   --&[%2%](99999)|[@[%1%]([$_THISROLL.Raw])] --%| --<| --:LibSN_CHECK_TOKEN_OVERLAP|Token1ID;Token2ID;ReturnStringVar -->LibSN_GET_TOKEN_COORDS|[%1%];_lib_L1X;_lib_L1Y;_lib_R1X;_lib_R1Y;1 -->LibSN_GET_TOKEN_COORDS|[%2%];_lib_L2X;_lib_L2Y;_lib_R2X;_lib_R2Y;1 --?[$_lib_L1X] -gt [$_lib_R2X] -or [$_lib_L2X] -gt [$_lib_R1X]|&[%3%];0 --?[&[%3%]] -eq 0|< --?[$_lib_L1Y] -gt [$_lib_R2Y] -or [$_lib_L2Y] -gt [$_lib_R1Y]|&[%3%];0 --?[&[%3%]] -eq 0|< --&[%3%]|1 --<| --:LibSN_CHECK_TOKEN_OVERLAP_CIRCLE|Token1ID;Token2ID;ReturnStringVar --=_lib_dist|[=[*[%1%]:t-left] - [*[%2%]:t-left] {SQUARE}] + [=[*[%1%]:t-top] - [*[%2%]:t-top] {SQUARE}] {SQRT} --=_lib_r1|[*[%1%]:t-width] / 2 --=_lib_r2|[*[%2%]:t-width] / 2 --&_lib_overlap|0 --?[$_lib_dist] -le [=[$_lib_r1] - [$_lib_r2]]|&_lib_overlap;1 --?[$_lib_dist] -le [=[$_lib_r2] - [$_lib_r1]]|&_lib_overlap;1 --?[$_lib_dist] -lt [=[$_lib_r1] + [$_lib_r2]]|&_lib_overlap;1 --/?[$_lib_dist] -eq [=[$_lib_r1] + [$_lib_r2]|&_lib_overlap;1 --&[%3%]|[&_lib_overlap] --<| --:LibSN_GET_TOKEN_COORDS|TokenID;LeftX;LeftY;RightX;RightY;shrink by pixels --=[%2%]|[*[%1%]:t-left] - [=[*[%1%]:t-width]  / 2] + [%6%] {FLOOR} --=[%3%]|[*[%1%]:t-top]  - [=[*[%1%]:t-height] / 2] + [%6%] {FLOOR} --=[%4%]|[$[%2%]] + [*[%1%]:t-width] - [%6%] - [%6%] {FLOOR} --=[%5%]|[$[%3%]] + [*[%1%]:t-height] - [%6%] - [%6%] {FLOOR} --<| --:LibSN_REPEATING_RBUTTONS|charid;sectionname,displayfield,filterfield;filtersearch;reentrypoint,reentryfield;returnstring   --&_LibBuild|   --=_LibRows|[*R:[%1%]:[%2%]:rowcount]   --%_libloop|1;[$_LibRows]     --?"[%4%]" -eq "" -or "[*R:[%1%]:[%2%]:[=[&_libloop]-1]:[%4%]]" -ninc "[%5%]"|[       --&_LibBuild|+[rbutton][*R:[%3%]]::[%6%];[*R:[%7%]][/rbutton]     --]|   --%|   --&[%8%]|[&_LibBuild] --<| --:LibSN_REPEATING_RBUTTONS_AS_ARRAY|charid;sectionname,displayfield,filterfield;filtersearch;reentrypoint,reentryfield;returnstring   --~|array;define;[%8%];   --~|array;removat;[%8];0   --=_LibRows|[*R:[%1%]:[%2%]:rowcount]   --%_libloop|1;[$_LibRows]     --?"[%4%]" -eq "" -or "[*R:[%1%]:[%2%]:[=[&_libloop]-1]:[%4%]]" -inc "[%5%]"|[       --&[%8%](9999)|[rbutton][*R:[%3%]]::[%6%];[*R:[%7%]][/rbutton]     --]|   --%| --<| --:LibSN_REPEATING_SHEETBUTTONS|sheetid;charid;sectionname,displayfield,filterfield;filtersearch;abilitiyfield;returnstring   --&_LibBuild|   --=_LibRows|[*R:[%2%]:[%3%]:rowcount]   --%_libloop|1;[$_LibRows]     --?"[%5%]" -eq "" -or "[*R:[%2%]:[%3%]:[=[&_libloop]-1]:[%5%]]" -ninc "[%6%]"|[       --&_LibAbilName|[*R:[%7%]]       --&_LibAbilName|[&_LibAbilName(replaceall, ,-)]       --&_LibBuild|+[button][*R:[%4%]]::~[%1%]|[&_LibAbilName][/button]     --]|   --%|   --&[%8%]|[&_LibBuild] --<| --:LibSN_REPEATING_SHEETBUTTONS_AS_ARRAY|sheetid;charid;sectionname,displayfield,filterfield;filtersearch;abilitiyfield;returnstring   --~|array;define;[%8%];   --~|array;removat;[%8];0   --=_LibRows|[*R:[%2%]:[%3%]:rowcount]   --%_libloop|1;[$_LibRows]     --?"[%5%]" -eq "" -or "[*R:[%2%]:[%3%]:[=[&_libloop]-1]:[%5%]]" -ninc "[%6%]"|[       --&_LibAbilName|[*R:[%7%]]       --&_LibAbilName|[&_LibAbilName(replaceall, ,-)]       --&[%8%](9999)|[button][*R:[%4%]]::~[%1%]|[&_LibAbilName][/button]     --]|   --%| --<| --:LibSN_Filter_Repeating_Hash_Keys|HashName;searchfield;searchvalue;ReturnArrayName   --~|array;fromkeys;[%1%]   --%_libloop|   --%| --<| --:LibSN_Move_Token|TokenID;X;Y   --+Tid|[%1%]   --&_LibTID|[%1%]   --&_TestX|_[%2%]   --&_TestY|_[%3%]   --=_XPOS|70 * [%2%] - 35   --=_YPOS|70 * [%3%] - 35   --?"[&_TestX(0,2)]" -eq "_+"|>_LibMoveToken_RELATIVEX;add   --?"[&_TestX(0,2)]" -eq "_-"|>_LibMoveToken_RELATIVEX;sub   --?"[&_TestY(0,2)]" -eq "_+"|>_LibMoveToken_RELATIVEY;add   --?"[&_TestY(0,2)]" -eq "_-"|>_LibMoveToken_RELATIVEY;sub   --!t:[%1%]|left:[$_XPOS]|top:[$_YPOS]   --X|   --:_LibMoveToken_RELATIVEX|add or sub     --&_LibNewX|[&_TestX(2)]     --=_LibXBASE|[*[&_LibTID]:t-left] {ROUND} - 35     --=_LibXOFF|[&_LibNewX] * 70     --?"[%1%]" -eq "add"|=_XPOS;[$_LibXBASE] + [$_LibXOFF] + 35     --?"[%1%]" -eq "sub"|=_XPOS;[$_LibXBASE] - [$_LibXOFF] + 35   --<|   --:_LibMoveToken_RELATIVEY|add or sub     --&_LibNewY|[&_TestY(2)]     --=_LibYBASE|[*[&_LibTID]:t-top] {ROUND} - 35     --=_LibYOFF|[&_LibNewY] * 70     --?"[%1%]" -eq "add"|=_YPOS;[$_LibYBASE] + [$_LibYOFF] + 35     --?"[%1%]" -eq "sub"|=_YPOS;[$_LibYBASE] - [$_LibYOFF] + 35   --<|  --<| --:LibSN_Report_Array|ArrayName   --%_libloop|foreach;[%1%]     --+Entry|[%_libloop]   --%|   --<| --:LibSN_BUILD_QUERY_FROM_REPSECTION|charid;sectionname;displayfield;valuefield;prompt;returnstring   --&_LibBuild|   --&_LibBuild|+?   --&_LibBuild|+{[%5%]|   --Rfirst|[%1%];[%2%]     --:_LibSN_BQFR_REPEAT|     --?"[*R:[%3%]]" -eq "NoRepeatingAttributeLoaded"|_LibSN_BQFR_DONE     --&_LibBuild|+[*R:[%3%]],[*R:[%4%]]|   --Rnext|   --^_LibSN_BQFR_REPEAT|   --:_LibSN_BQFR_DONE|   --&_LibBuild|+}   --&[%6%]|[&_LibBuild(replace,|},})] --<|